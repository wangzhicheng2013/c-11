/*
 * FileWatchNotify.cpp
 *
 *  Created on: 2018-11-28
 *      Author: root
 */

#include "FileWatchNotify.h"

FileWatchNotify::FileWatchNotify(const FileWatchNotifyConfig &_config) : config(_config)
{
	// TODO Auto-generated constructor stub
	inotify_fd = -1;
	watch_fd = -1;
	ev_base = nullptr;
}
bool FileWatchNotify::Init()
{
	return true;
}
bool FileWatchNotify::InitLibEvent()
{
	 ev_base = event_base_new();
	 if (nullptr == ev_base)
	 {
		 cerr << "event_base_new() failed...!" << endl;
		 return false;
	 }
	 struct event *event = event_new(ev_base,
			 inotify_fd,
			 EV_READ | EV_PERSIST,
			 NotifyCallBackFn,
			 this);
	 if (nullptr == event)
	 {
		 cerr << "event_new() failed...!" << endl;
		 return false;
	 }
	 event_add(event, NULL);
	 event_base_dispatch(ev_base);
}
void FileWatchNotify::NotifyCallBackFn(int fd, short events, void *arg)
{

}
void FileWatchNotify::RemoveInotify()
{
	if (inotify_rm_watch(inotify_fd, watch_fd) < 0)
	{
		cerr << "inotify_rm_watch() failed...!" << endl;
	}
	else
	{
		watch_fd = -1;
	}
	if (inotify_fd >= 0)
	{
		close(inotify_fd);
		inotify_fd = -1;
	}
}
void FileWatchNotify::DestoryLibEvent()
{
	if (nullptr != ev_base)
	{
		event_base_loopexit(ev_base, NULL);
		event_base_free(ev_base);
		ev_base = nullptr;
	}
}
FileWatchNotify::~FileWatchNotify()
{
	// TODO Auto-generated destructor stub

}
