GetAES Query product information:
    false => send kafka message (id, pid)
             store MutexHashMap(key-- id, SubRelation *)
    transaction failed return


RegenerateProductThread
    consumer kafka message for certain topic 
    parse json
    if status is failed => nothing to do
    else send (id, ProductRegenerateEvent) => queue     

KafkaMsgProcessThread
    while (true):
        obj = dequeue(queue)
        if obj != null:
            ProductRegenerateHandle(obj.id)
        consumer from kafka


ProductRegenerateHandle(const string &id):
    query from MutexHashMap with id => SubRelation
    call SendRegerateProductMessage



RegenerateHandle
    ProductRegenerate(const char *pid, KafkaRedisHandle):
        generate transid
        construct json(pid, transid)
        send json to kafka
    

RegenerateMsg 
ProductRegernateMsg : public RegenerateMsg
   msg_type PRODUCT_REGERNERATE     Handler(KafkaRedisHandler &, ProductRegenerateMsg)
   msg_type PRODUCT_REGERNERATE     Handler(KafkaRedisHandler &, ProductRegenerateMsg)
AddRegerateMsg(msg, kafkaredishandler)
DoRegerateMsg(type, kafkaredishandler)
        dequeue
        failed return
        parse json
        query with id => ProductRegenerateMsg


